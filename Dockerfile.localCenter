# => Build container
FROM dockerhub.paziresh24.com/node:14.18.2-alpine as build
WORKDIR /app
COPY package.json package-lock.json .npmrc ./
ENV YARN_REGISTRY=http://192.168.216.74:8081/repository/npm-proxy/
RUN npm config set registry http://192.168.216.74:8081/repository/npm-proxy/ && npm config get registry
RUN npm install --production
COPY . .
ENV PUBLIC_URL /doctorapp
RUN npm run build drapp

# => Run container
FROM dockerhub.paziresh24.com/nginx:alpine

# Nginx config
RUN rm -rf /etc/nginx/conf.d
WORKDIR /usr/share/nginx/html
COPY ./docker/nginx/default.conf /etc/nginx/conf.d/default.conf

# Static build
COPY --from=build /app/dist/apps/drapp /usr/share/nginx/html/

# Copy .env file and shell script to container
WORKDIR /usr/share/nginx/html
COPY ./apps/drapp/env.sh .
COPY ./apps/drapp/.env .

# Add bash
RUN apk add --no-cache bash

# Make our shell script executable
RUN chmod +x env.sh

RUN sed -i -e 's/\r$//' env.sh
RUN sed -i -e 's/\r$//' .env

# Start Nginx server
CMD ["/bin/bash", "-c", "/usr/share/nginx/html/env.sh && nginx -g \"daemon off;\""]
