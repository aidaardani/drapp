image: dockerhub.paziresh24.com/node:14.18.2-alpine

stages:
  - build
  - test
  - build-image
  - deploy

variables:
  RULES_CHANGES_PATH: "**/*"
  DOCKER_IMAGE_TAG_LOCAL: dockerhub.paziresh24.com/drapp-local
  DOCKER_IMAGE_TAG_COM: dockerhub.paziresh24.com/drapp

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/
    - apps/drapp/node_modules/

services:
  - name: dockerhub.paziresh24.com/docker:dind
    alias: docker

.base-rules:
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: always
    - if: '$CI_PIPELINE_SOURCE == "push"'
      when: manual
    - if: $CI_COMMIT_TAG
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - $RULES_CHANGES_PATH


.drApp:
  extends: .base-rules
  variables:
    RULES_CHANGES_PATH: "apps/drapp/**/*"


drApp-build:
  stage: build
  extends: .drApp
  before_script:
    - echo 'nameserver 178.22.122.100' >> /etc/resolv.conf
    - echo 'nameserver 185.51.200.2' >> /etc/resolv.conf
  script:
    - npm install --force --silent
    - npm install -g nx

drApp-test:
  stage: test
  extends: .drApp
  needs: ["drApp-build"]
  script:
    - nx e2e-ci drapp-e2e



drApp-build-push-docker-image:
  stage: build-image
  needs: ["drApp-test"]
  image: dockerhub.paziresh24.com/docker:stable
  extends: .drApp
  before_script:
    - docker info
    - echo '192.168.216.16 dockerhub.paziresh24.com' >> /etc/hosts
    - echo 'nameserver 178.22.122.100' >> /etc/resolv.conf
    - echo 'nameserver 185.51.200.2' >> /etc/resolv.conf
  script:
    - docker login $DOCKER_AUTH_URL -u $DOCKER_AUTH_USERNAME -p $DOCKER_AUTH_PASSWORD
    - docker build -t $DOCKER_IMAGE_TAG_LOCAL:latest -f Dockerfile.localCenter .
    - docker build -t $DOCKER_IMAGE_TAG_COM:latest -f Dockerfile.drApp .
    - docker push $DOCKER_IMAGE_TAG_LOCAL:latest
    - docker push $DOCKER_IMAGE_TAG_COM:latest

drApp-deploy-production:
  image: dockerhub.paziresh24.com/docker-ansible:latest
  stage: deploy
  when: manual
  needs: ["drApp-test"]
  script:
    - apk add --update bash openssh sshpass
    - ansible-galaxy collection install community.docker
    - ansible-playbook ./ansible/prescription/playbook-com.yml -i ./ansible/prescription/inventory.yml


drApp-deploy-locals:
  image: dockerhub.paziresh24.com/docker-ansible:latest
  stage: deploy
  when: manual
  needs: ["drApp-test"]
  script:
    - apk add --update bash openssh sshpass
    - ansible-galaxy collection install community.docker
    - ansible-playbook ./ansible/prescription/playbook-locals.yml -i ./ansible/prescription/inventory.yml


drApp-deploy-qc:
  image: dockerhub.paziresh24.com/docker-ansible:latest
  stage: deploy
  when: manual
  needs: ["drApp-test"]
  script:
    - apk add --update bash openssh sshpass
    - ansible-galaxy collection install community.docker
    - ansible-playbook ./ansible/drapp/playbook-qc.yml -i ./ansible/drapp/inventory.yml
