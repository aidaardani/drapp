@mixin mixin-font($font-family, $file-name, $font-weight, $font-path) {
    @font-face {
        font-family: $font-family;
        src: url('#{$font-path}/eot/#{$file-name}.eot');
        src: url('#{$font-path}/eot/#{$file-name}.eot?#iefix') format('embedded-opentype'),
            url('#{$font-path}/ttf/#{$file-name}.ttf') format('truetype'),
            url('#{$font-path}/woff/#{$file-name}.woff') format('woff'),
            url('#{$font-path}/woff2/#{$file-name}.woff2') format('woff2');
        font-weight: $font-weight;
        font-style: normal;
        font-display: swap;
    }
}

@mixin flex {
    display: flex;
    align-items: center;
}

@mixin push-auto {
    margin: {
        left: auto;
        right: auto;
    }
}

@mixin pseudo($display: block, $pos: absolute, $content: '') {
    content: $content;
    display: $display;
    position: $pos;
}

@mixin image-protect {
    max-width: 100%;
    max-height: 100%;
    object-fit: contain;
    width: 100%;
    height: 100%;
}

@mixin gap($gap: 1rem, $row: true, $reverse: false) {
    > * {
        @if $row==true {
            margin: 0 $gap/2;

            @if $reverse==true {
                &:first-child {
                    margin-left: 0;
                }

                &:last-child {
                    margin-right: 0;
                }
            } @else {
                &:first-child {
                    margin-right: 0;
                }

                &:last-child {
                    margin-left: 0;
                }
            }
        } @else {
            margin: $gap/2 0;

            @if $reverse==true {
                &:first-child {
                    margin-bottom: 0;
                }

                &:last-child {
                    margin-top: 0;
                }
            } @else {
                &:first-child {
                    margin-top: 0;
                }

                &:last-child {
                    margin-bottom: 0;
                }
            }
        }
    }
}

@mixin btn-style($color, $textColor) {
    background-color: $color;
    color: $textColor;

    &:hover {
        background: darken($color, 3%)
            radial-gradient(circle, transparent 1%, darken($color, 3%) 1%) center/15000%;
    }
    &:active {
        background-color: lighten($color, 5%);
        background-size: 100%;
        transition: background 0s;
    }
}

@function pxtorem($px) {
    @return $px / 10px * 1rem;
}

@mixin btn-style($color, $textColor) {
    background-color: $color;
    color: $textColor;

    &:hover {
        background: darken($color, 3%)
            radial-gradient(circle, transparent 1%, darken($color, 3%) 1%) center/15000%;
    }
    &:active {
        background-color: lighten($color, 5%);
        background-size: 100%;
        transition: background 0s;
    }
}
