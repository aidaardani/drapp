image: docker.paziresh24.info/node:14.18.2-alpine

stages:
  - test
  - build-image
  - deploy
  - rollback

variables:
  RULES_CHANGES_PATH: "**/*"
  DOCKER_IMAGE_TAG_LOCAL: docker.paziresh24.info/drapp-local
  DOCKER_IMAGE_TAG_COM: docker.paziresh24.info/drapp
  KUBERNETES_DOCKER_TAG: ${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}-${CI_PIPELINE_ID}
  
  FF_USE_FASTZIP: "true"
  # These can be specified per job or per pipeline
  ARTIFACT_COMPRESSION_LEVEL: "fast"
  CACHE_COMPRESSION_LEVEL: "fast"
  ANSIBLE_HOST_KEY_CHECKING: 'false'
  ANSIBLE_FORCE_COLOR: 'true'

# Caches
.node_modules-cache: &node_modules-cache
  key:
    files:
      - yarn.lock
  paths:
    - node_modules
    - apps/*/node_modules/
  policy: pull

.yarn-cache: &yarn-cache
  key: yarn-$CI_JOB_IMAGE
  paths:
    - .yarn

cache:
  key: $CI_PROJECT_ID
  policy: pull
  untracked: true
  paths:
    - node_modules/
    - apps/drapp/node_modules/

before_script:
  - export DOCKER_BUILD=1

services:
  - name: docker.paziresh24.info/docker:dind
    alias: docker

.base-rules:
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: always
    - if: '$CI_PIPELINE_SOURCE == "push"'
      when: never
    - if: $CI_COMMIT_TAG
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
      changes:
        - $RULES_CHANGES_PATH


.drApp:
  extends: .base-rules
  variables:
    RULES_CHANGES_PATH: "apps/drapp/**/*"


drApp-build-develop-push-docker-image:
  stage: build-image
#  needs: ["drApp-test"]
  image: docker.paziresh24.info/docker:stable
  only:
    - develop
  before_script:
    - docker info
  script:
    - git config --global http.version HTTP/1.1
    - git config --global http.postBuffer 157286400
    - export DOCKER_BUILD=1
    - export DOCKER_BUILDKIT=1
    - docker login $DOCKER_REGISTRY_URL -u $DOCKER_REGISTRY_USERNAME -p $DOCKER_REGISTRY_PASSWORD
    - docker build -t $DOCKER_IMAGE_TAG_COM:develop -f Dockerfile.drApp .
    - docker push $DOCKER_IMAGE_TAG_COM:develop
  tags:
    - france-loc
    
drApp-build-cloud-push-docker-image:
  stage: build-image
#  needs: ["drApp-test"]
  image: docker.paziresh24.info/docker:stable
#  extends: .drApp
  only:
    - main
  before_script:
    - docker info
  script:
    - git config --global http.version HTTP/1.1
    - git config --global http.postBuffer 157286400
    - export DOCKER_BUILD=1
    - export DOCKER_BUILDKIT=1
    - docker login $DOCKER_REGISTRY_URL -u $DOCKER_REGISTRY_USERNAME -p $DOCKER_REGISTRY_PASSWORD
    - docker build -t $DOCKER_IMAGE_TAG_COM:latest -t $DOCKER_IMAGE_TAG_COM:$KUBERNETES_DOCKER_TAG -f Dockerfile.drApp .
    - docker push $DOCKER_IMAGE_TAG_COM:latest
    - docker push $DOCKER_IMAGE_TAG_COM:$KUBERNETES_DOCKER_TAG
  tags:
    - france-loc


drApp-deploy-stage:
  image: docker.paziresh24.info/docker-ansible:latest
  stage: deploy
  only:
    - main
#  needs: ["drApp-test"]
  script:
    - apk add --update bash openssh sshpass
    - ansible-playbook ./ansible/drapp/playbook-stage.yml -i ./ansible/drapp/inventory.yml -e 'ansible_python_interpreter=/usr/bin/python3'




drApp-deploy-production:
  image: docker.paziresh24.info/docker-ansible:latest
  stage: deploy
  when: manual
  only:
    - main
#  needs: ["drApp-test"]
  script:
    - apk add --update bash openssh sshpass
    - ansible-playbook ./ansible/drapp/playbook-com.yml -i ./ansible/drapp/inventory.yml -e 'ansible_python_interpreter=/usr/bin/python3'
    - curl -X POST -F variables[DOCKER_TAG_CLOUD]=${KUBERNETES_DOCKER_TAG} -F token=${KUBIT_WEBHOOK_TOKEN}  https://api.kubit.ir/api/core/packs/pai33lfy/vars/


drApp-deploy-develop:
  image: docker.paziresh24.info/docker-ansible:latest
  stage: deploy
  when: manual
  only:
    - develop
#  needs: ["drApp-test"]
  script:
    - apk add --update bash openssh sshpass
    - ansible-playbook ./ansible/drapp/playbook-develop.yml -i ./ansible/drapp/inventory.yml -e 'ansible_python_interpreter=/usr/bin/python3'


drApp-rollback-production:
  image: docker.paziresh24.info/docker-ansible:latest
  stage: rollback
  when: manual
  #needs: ["drApp-deploy-production"]
  script:
    - apk add --update bash openssh sshpass
    - ansible-playbook ./ansible/drapp/playbook-com-rollback.yml -i ./ansible/drapp/inventory.yml -e 'ansible_python_interpreter=/usr/bin/python3'
